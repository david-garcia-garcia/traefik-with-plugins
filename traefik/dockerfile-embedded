# Multi-stage build for Traefik with embedded plugins
# This dockerfile builds Traefik from source with plugins compiled directly into the binary

# Stage 1: Build stage with Go and Git
FROM golang:1.24.3-alpine3.21 AS builder

# Install required tools
RUN set -eux; \
    apk add --no-cache git make bash curl nodejs npm patch dos2unix docker-cli yarn

# Set working directory
WORKDIR /build

# Clone Traefik upstream repository from official repo
RUN git clone https://github.com/traefik/traefik.git --branch v3.5.3 --single-branch --depth 1

# Clone plugin repositories into the Traefik source tree
WORKDIR /build/traefik

# Copy our custom middleware integration files
COPY embedded-plugins/ pkg/middlewares/plugins/

# Copy embedded plugin registry to plugins package
RUN cp pkg/middlewares/plugins/embedded-registry.go pkg/plugins/

# Apply embedded plugin patch to builder
RUN patch -p0 < pkg/middlewares/plugins/builder.patch

# Add plugin dependencies directly using their published versions
RUN go mod edit -require=github.com/david-garcia-garcia/traefik-modsecurity@v1.7.0
RUN go mod edit -require=github.com/sablierapp/sablier@v1.10.1
RUN go mod edit -require=github.com/maxlerebourg/crowdsec-bouncer-traefik-plugin@v1.4.5
RUN go mod edit -require=github.com/david-garcia-garcia/traefik-geoblock@v1.1.2-beta.0
RUN go mod edit -require=github.com/david-garcia-garcia/traefik-realip@v1.0.0-beta.3

# Download dependencies
RUN go mod download
RUN go mod tidy

# Build WebUI directly using Node.js (MUST be before binary build for go:embed)
WORKDIR /build/traefik/webui
RUN npm install
RUN npm run build

# Clone plugins for runtime assets (HTML templates, databases)
WORKDIR /plugins-local/src/github.com/david-garcia-garcia
RUN git clone https://github.com/david-garcia-garcia/traefik-geoblock --branch v1.1.2-beta.0 --single-branch

WORKDIR /plugins-local/src/github.com/maxlerebourg
RUN git clone https://github.com/maxlerebourg/crowdsec-bouncer-traefik-plugin --branch v1.4.5 --single-branch

# Build Traefik binary with embedded plugins (WebUI gets embedded via go:embed)
WORKDIR /build/traefik
RUN mkdir -p dist/linux/amd64
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags "-s -w" -installsuffix nocgo -o "./dist/linux/amd64/traefik" ./cmd/traefik

# Stage 2: Final runtime image
FROM alpine:3.22

RUN apk add --no-cache --no-progress ca-certificates tzdata

# Copy the built binary from builder stage (WebUI is already embedded inside via go:embed)
COPY --from=builder /build/traefik/dist/linux/amd64/traefik /traefik

# Copy plugin assets for runtime (HTML templates, databases)
COPY --from=builder /plugins-local/src/github.com/david-garcia-garcia/traefik-geoblock /plugins-local/src/github.com/david-garcia-garcia/traefik-geoblock
COPY --from=builder /plugins-local/src/github.com/maxlerebourg/crowdsec-bouncer-traefik-plugin /plugins-local/src/github.com/maxlerebourg/crowdsec-bouncer-traefik-plugin

# Set environment variables for plugin paths
ENV TRAEFIK_PLUGIN_GEOBLOCK_PATH=/plugins-local/src/github.com/david-garcia-garcia/traefik-geoblock

EXPOSE 80
VOLUME ["/tmp"]

ENTRYPOINT ["/traefik"]
