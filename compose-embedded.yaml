services:
  traefik:
    image: traefik-embedded:latest
    restart: unless-stopped
    build:
      context: ./traefik
      dockerfile: dockerfile-embedded
    volumes:
      # Mount the embedded traefik config to the container's /etc/traefik/traefik.yml
      - ./traefik-embedded.yml:/etc/traefik/traefik.yml
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "logs:/var/log/traefik"
      - "geoblock-data:/data/autoupdate"
    ports:
      - 8000:80
      - 8080:8080
    depends_on:
      - waf
    environment:
      - IMAGE_NAME=traefik-embedded:latest
      # Plugin key remapping - allows using legacy names in configurations
      # Uncomment to use "bouncer" instead of "crowdsec" in plugin configurations
      # - TRAEFIK_EMBEDDED_CROWDSEC_KEY=bouncer

  # Service 1: Plain whoami without any middleware
  whoami-plain:
    image: traefik/whoami
    container_name: "whoami-plain"
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.plain-router.rule=Path(`/plain`)"
      - "traefik.http.routers.plain-router.entrypoints=web"
      - "traefik.http.services.plain-service.loadbalancer.server.port=80"

  # Service 2: Whoami with ModSecurity middleware
  whoami-modsecurity:
    image: traefik/whoami
    container_name: "whoami-modsecurity"
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.modsecurity-router.rule=Path(`/modsecurity`)"
      - "traefik.http.routers.modsecurity-router.entrypoints=web"
      - "traefik.http.routers.modsecurity-router.middlewares=waf@docker"
      - "traefik.http.services.modsecurity-service.loadbalancer.server.port=80"
      - "traefik.http.middlewares.waf.plugin.modsecurity.modSecurityUrl=http://waf:8080"
      - "traefik.http.middlewares.waf.plugin.modsecurity.jailEnabled=false"

  # Service 3: Whoami with Geoblock middleware (simplified config)
  whoami-geoblock:
    image: traefik/whoami
    container_name: "whoami-geoblock"
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.geoblock-router.rule=Path(`/geoblock`)"
      - "traefik.http.routers.geoblock-router.entrypoints=web"
      - "traefik.http.routers.geoblock-router.middlewares=geoblock@docker"
      - "traefik.http.services.geoblock-service.loadbalancer.server.port=80"
      - "traefik.http.middlewares.geoblock.plugin.geoblock.enabled=true"
      - "traefik.http.middlewares.geoblock.plugin.geoblock.defaultAllow=true"
      - "traefik.http.middlewares.geoblock.plugin.geoblock.allowPrivate=true"
      - "traefik.http.middlewares.geoblock.plugin.geoblock.databaseAutoUpdate=true"
      - "traefik.http.middlewares.geoblock.plugin.geoblock.databaseAutoUpdateDir=/data/autoupdate"
      - "traefik.http.middlewares.geoblock.plugin.geoblock.logLevel=debug"
  # Service 4: Whoami with CrowdSec middleware
  whoami-crowdsec:
    image: traefik/whoami
    container_name: "whoami-crowdsec"
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.crowdsec-router.rule=Path(`/crowdsec`)"
      - "traefik.http.routers.crowdsec-router.entrypoints=web"
      - "traefik.http.routers.crowdsec-router.middlewares=crowdsec@docker"
      - "traefik.http.services.crowdsec-service.loadbalancer.server.port=80"
      - "traefik.http.middlewares.crowdsec.plugin.crowdsec.enabled=true"
      - "traefik.http.middlewares.crowdsec.plugin.crowdsec.crowdsecLapiKey=test-api-key-123"
      - "traefik.http.middlewares.crowdsec.plugin.crowdsec.crowdsecAppsecEnabled=false"
      - "traefik.http.middlewares.crowdsec.plugin.crowdsec.forwardedHeadersTrustedIps=172.21.0.5"
      - "traefik.http.middlewares.crowdsec.plugin.crowdsec.crowdsecMode=stream"
      - "traefik.http.middlewares.crowdsec.plugin.crowdsec.updateMaxFailure=-1"
      - "traefik.http.middlewares.crowdsec.plugin.crowdsec.logLevel=DEBUG"
      - "traefik.http.middlewares.crowdsec.plugin.crowdsec.captchaHtmlFilePath=/plugins-local/src/github.com/maxlerebourg/crowdsec-bouncer-traefik-plugin/captcha.html"
      - "traefik.http.middlewares.crowdsec.plugin.crowdsec.banHtmlFilePath=/plugins-local/src/github.com/maxlerebourg/crowdsec-bouncer-traefik-plugin/ban.html"

  # Service 5: Whoami with RealIP middleware
  whoami-realip:
    image: traefik/whoami
    container_name: "whoami-realip"
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.realip-router.rule=Path(`/realip`)"
      - "traefik.http.routers.realip-router.entrypoints=web"
      - "traefik.http.routers.realip-router.middlewares=realip@docker"
      - "traefik.http.services.realip-service.loadbalancer.server.port=80"
      - "traefik.http.middlewares.realip.plugin.realip.enabled=true"
      - "traefik.http.middlewares.realip.plugin.realip.headerName=X-Real-IP"
      - "traefik.http.middlewares.realip.plugin.realip.processHeaders[0].headerName=X-Forwarded-For"
      - "traefik.http.middlewares.realip.plugin.realip.processHeaders[0].depth=-1"
      - "traefik.http.middlewares.realip.plugin.realip.processHeaders[1].headerName=CF-Connecting-IP"
      - "traefik.http.middlewares.realip.plugin.realip.processHeaders[1].depth=-1"
      - "traefik.http.middlewares.realip.plugin.realip.processHeaders[2].headerName=clientAddress"
      - "traefik.http.middlewares.realip.plugin.realip.processHeaders[2].depth=-1"
      - "traefik.http.middlewares.realip.plugin.realip.forceOverwrite=true"
  # ModSecurity WAF service
  waf:
    image: owasp/modsecurity-crs:4.3.0-apache-alpine-202406090906
    container_name: "waf"
    restart: unless-stopped
    environment:
      - PARANOIA=1
      - ANOMALY_INBOUND=10
      - ANOMALY_OUTBOUND=5
      - BACKEND=http://dummy
      - REPORTING_LEVEL=2
      - MODSEC_AUDIT_LOG_FORMAT=JSON
      - MODSEC_RULE_ENGINE=On
    labels:
      - "traefik.enable=false"

  # Dummy backend for WAF
  dummy:
    image: traefik/whoami
    container_name: "dummy"
    restart: unless-stopped
    labels:
      - "traefik.enable=false"

volumes:
  logs:
  geoblock-data:
